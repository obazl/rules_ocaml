load("@bazel_skylib//rules:common_settings.bzl",
     "bool_flag", "bool_setting",
     "string_flag", "string_setting",
     "string_list_flag", "string_list_setting")

load("@rules_ocaml//build:rules.bzl", "ocaml_ns")
load("@rules_ocaml//build:rules.bzl", "ocaml_topdown_ns_resolver")

package(default_visibility = ["//visibility:public"])

bool_flag( name = "verbose", build_setting_default = False)
bool_setting( name = "verbose?", build_setting_default = True)

string_list_flag( name = "warnings",
                  build_setting_default = ["@1..3@5..28@30..39@43@46..47@50..57@61..62-40",
                  "-49" # Error (warning 49): no cmi file was found in path for module
                  ]
)

string_list_flag(name = "prefixes", build_setting_default = [])

## FIXME: use @rules_ocaml//cfg/archive:manifest instead?
## or @rules_ocaml//cfg/manifest?
string_list_flag(name = "submodules", build_setting_default = [])

label_setting(name="resolver", build_setting_default = ":_resolver")
# used by every module/sig rule. namespacing sets unique config.
# no namespacing: only built once as null resolver
ocaml_topdown_ns_resolver(name    = "_resolver")
# ocaml_ns_resolver(name    = "_resolver")

string_flag(name="nonce", build_setting_default = "")

